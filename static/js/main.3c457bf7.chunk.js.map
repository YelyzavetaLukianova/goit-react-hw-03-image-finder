{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/Modal/Modal.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button/Button.jsx","components/Loader/Loader.jsx","services/Api.js","App.js","index.js"],"names":["Searchbar","state","imageName","handleNameChange","e","setState","target","value","toLowerCase","handleSubmit","preventDefault","trim","props","handleFormSubmit","alert","className","onSubmit","this","type","name","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","smallPhoto","bigPhoto","id","onClick","src","alt","Modal","handleBackdropClick","currentTarget","modalClose","onEscPress","code","window","addEventListener","removeEventListener","ImageGallery","webformatURL","largeImageURL","isOpen","getAttribute","hits","takeLargeImage","map","Button","loaderRef","document","querySelector","LoaderModal","createPortal","color","height","width","timeout","axios","defaults","baseURL","dataApi","data","page","a","get","result","App","loading","isOpenModal","onModalOpen","onModalClose","img","prevState","prevProps","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3c457bf7.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Searchbar1 from '../Searchbar/Searchbar1.css';\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    imageName: '',\r\n  };\r\n\r\n  handleNameChange = e => {\r\n    this.setState({ imageName: e.target.value.toLowerCase() });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.imageName.trim() === '') {\r\n      alert('Enter what do You want');\r\n      return;\r\n    }\r\n    this.props.handleFormSubmit(this.state.imageName);\r\n    this.setState({ imageName: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <header className=\"Searchbar\">\r\n          <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n            <button type=\"submit\" className=\"SearchForm__button\">\r\n              <span className=\"SearchForm__button__label\">Search</span>\r\n            </button>\r\n\r\n            <input\r\n              name=\"imageName\"\r\n              value={this.state.imageName}\r\n              className=\"SearchForm__input\"\r\n              type=\"text\"\r\n              autoComplete=\"off\"\r\n              autoFocus\r\n              placeholder=\"Search images and photos\"\r\n              onChange={this.handleNameChange}\r\n            />\r\n          </form>\r\n        </header>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n  onChange: PropTypes.func,\r\n  value: PropTypes.string,\r\n};\r\n\r\nexport default Searchbar;\r\n","import PropTypes from 'prop-types';\r\nimport './ImageGalleryItem.css';\r\n\r\nfunction ImageGalleryItem({ smallPhoto, bigPhoto, id, onClick }) {\r\n  return (\r\n    <li className=\"ImageGalleryItem\" onClick={onClick}>\r\n      <img\r\n        className=\"ImageGalleryItem__image\"\r\n        src={smallPhoto}\r\n        alt={bigPhoto}\r\n        id={id}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  smallPhoto: PropTypes.string,\r\n  bigPhoto: PropTypes.string,\r\n  id: PropTypes.number,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import PropTypes from 'prop-types';\r\nimport { Component } from 'react';\r\n\r\nimport './Modal.css';\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.onEscPress);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.onEscPress);\r\n  }\r\n\r\n  handleBackdropClick = e => {\r\n    if (e.target === e.currentTarget) {\r\n      this.props.modalClose();\r\n    }\r\n  };\r\n\r\n  onEscPress = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.modalClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">\r\n          <img src={this.props.bigPhoto} alt=\"\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  onClick: PropTypes.func,\r\n  icon: PropTypes.string,\r\n};\r\n\r\nexport default Modal;\r\n","import PropTypes from 'prop-types';\r\nimport { Component } from 'react';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport Modal from '../Modal/Modal';\r\nimport ImageGallery1 from './ImageGallery1.css';\r\n\r\nclass ImageGallery extends Component {\r\n  state = {\r\n    imageName: '',\r\n    webformatURL: '',\r\n    largeImageURL: '',\r\n    id: '',\r\n  };\r\n\r\n  isOpen = e => {\r\n    this.setState({ largeImageURL: e.target.getAttribute('alt') });\r\n  };\r\n\r\n  render() {\r\n    const { hits, takeLargeImage } = this.props;\r\n    return (\r\n      <>\r\n        <ul className=\"ImageGallery\">\r\n          {hits.map(({ webformatURL, largeImageURL, id }) => (\r\n            <ImageGalleryItem\r\n              smallPhoto={webformatURL}\r\n              bigPhoto={largeImageURL}\r\n              key={id}\r\n              onClick={() => takeLargeImage(largeImageURL)}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  key: PropTypes.number,\r\n  smallPhoto: PropTypes.string,\r\n  bigPhoto: PropTypes.string,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import PropTypes from 'prop-types';\r\nimport './Button.css';\r\n\r\nfunction Button({ onClick }) {\r\n  return (\r\n    <button className=\"Button\" type=\"button\" onClick={onClick}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","// /** @jsxImportSource @emotion/react */\r\n\r\n// import PulseLoader from 'react-spinners/PulseLoader';\r\n\r\n// const Loader = () => {\r\n//   return (\r\n//     // <div className=\"Loader\">\r\n//     //   <PulseLoader margin={4} size={25} color={'#757575'} />\r\n//     // </div>\r\n//   );\r\n// };\r\n\r\n// export default Loader;\r\nimport React from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport './Loader.css';\r\n\r\nconst loaderRef = document.querySelector('#loader-root');\r\n\r\nconst LoaderModal = () => {\r\n  return createPortal(\r\n    <div className=\"Loader\">\r\n      <Loader\r\n        type=\"ThreeDots\"\r\n        color=\"#3f51b5\"\r\n        height={120}\r\n        width={120}\r\n        timeout={0}\r\n      />\r\n    </div>,\r\n    loaderRef,\r\n  );\r\n};\r\n\r\nexport default LoaderModal;\r\n","import axios from 'axios';\r\nconst API_KEY = '24484314-ee5138bfa536a1ec729b18d47';\r\naxios.defaults.baseURL = 'https://pixabay.com/api/';\r\n\r\nconst dataApi = async (data, page) => {\r\n  const result = await axios.get(\r\n    `?key=${API_KEY}&q=${data}&imageType=photo&orientation=horizontal&safesearch=true&per_page=12&page=${page}`,\r\n  );\r\n  const { hits } = result.data;\r\n\r\n  return { hits };\r\n};\r\n\r\nexport default dataApi;\r\n","import { Component } from 'react';\nimport Searchbar from './components/Searchbar/Searchbar.jsx';\nimport ImageGallery from './components/ImageGallery/ImageGallery.jsx';\nimport Button from './components/Button/Button/Button';\nimport Modal from './components/Modal/Modal.jsx';\nimport LoaderModal from './components/Loader/Loader.jsx';\nimport './App.css';\nimport dataApi from '../src/services/Api';\n\nclass App extends Component {\n  state = {\n    hits: [],\n    loading: false,\n    page: 1,\n    imageName: '',\n    isOpenModal: false,\n    largeImageURL: '',\n  };\n\n  onModalOpen = () => this.setState({ isOpenModal: true });\n  onModalClose = () => this.setState({ isOpenModal: false });\n\n  takeLargeImage = img => {\n    this.setState({ largeImageURL: img });\n    this.onModalOpen();\n  };\n\n  async componentDidMount() {\n    const { imageName, page } = this.state;\n    const data = await dataApi(imageName, page);\n    this.setState({ hits: data.hits });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    const { imageName, page, loading } = this.state;\n\n    if (prevState.page !== page || prevState.imageName !== imageName) {\n      this.setState({ loading: true });\n      try {\n        const data = await dataApi(imageName, page);\n        this.setState(prevState => ({\n          ...prevState,\n          hits:\n            prevState.imageName !== imageName\n              ? data.hits\n              : [...prevState.hits, ...data.hits],\n        }));\n      } catch (error) {\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n  }\n\n  handleFormSubmit = imageName => {\n    this.setState(prevState => ({\n      ...prevState,\n      imageName: imageName,\n      page: 1,\n      hits: [],\n    }));\n  };\n\n  onClick = () => {\n    this.setState(prevState => ({\n      ...prevState,\n      page: prevState.page + 1,\n    }));\n  };\n\n  render() {\n    const { hits, isOpenModal, largeImageURL, loading } = this.state;\n    const { handleFormSubmit, onClick } = this;\n    return (\n      <>\n        <Searchbar handleFormSubmit={handleFormSubmit} />\n        <ImageGallery hits={hits} takeLargeImage={this.takeLargeImage} />\n        {hits.length >= 12 && <Button onClick={onClick} />}\n        {isOpenModal && (\n          <Modal bigPhoto={largeImageURL} modalClose={this.onModalClose} />\n        )}\n        {loading && <LoaderModal />}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './styles/styles.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}